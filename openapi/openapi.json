{
  "openapi" : "3.0.1",
  "info" : {
    "description" : "@project.description@",
    "termsOfService" : "https://www.pagopa.gov.it/",
    "title" : "@project.name@",
    "version" : "0.5.2"
  },
  "servers" : [ {
    "url" : "http://localhost:8080"
  }, {
    "url" : "{host}{basePath}",
    "variables" : {
      "basePath" : {
        "enum" : [ "/print-payment-notice-service/v1" ]
      },
      "host" : {
        "default" : "https://api.platform.pagopa.it",
        "enum" : [ "https://api.dev.platform.pagopa.it", "https://api.uat.platform.pagopa.it", "https://api.platform.pagopa.it" ]
      }
    }
  } ],
  "paths" : {
    "/institutions/data" : {
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ],
      "post" : {
        "description" : "Uploads or updates the provided institution data and logo on the related storage, to be used in the payment notice generation process",
        "operationId" : "updateInstitutions",
        "requestBody" : {
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary",
                    "description" : "logo file to upload"
                  },
                  "institutions-data" : {
                    "type" : "string",
                    "description" : "String containing the json data to upload ```{\n  \"taxCode\": \"ABC345678h\",\n  \"fullName\": \"Comune di Roma\",\n  \"organization\": \"organization_unit\",\n  \"info\": \"info@contacts.it\",\n  \"webChannel\": false,\n  \"appChannel\": false,\n  \"physicalChannel\": \"physicalChannel_f0abb45cbc34\",\n  \"cbill\": \"cbill_9c5ff5908c72\",\n  \"posteAccountNumber\": \"posteAccountNumber_2177702a81c2\",\n  \"posteAuth\": \"code_poste_auth_332\",\n} ```"
                  }
                },
                "required" : [ "institutions-data" ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "uploadInstitutionData",
        "tags" : [ "Institutions Data APIs" ]
      }
    },
    "/institutions/data/{taxCode}" : {
      "get" : {
        "description" : "Retrieves saved institution data and logo on the related storage, to be used in the payment notice generation process",
        "operationId" : "getInstitutionData",
        "parameters" : [ {
          "description" : "tax code of the CI to use for retrieval",
          "in" : "path",
          "name" : "taxCode",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Not Found",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "getInstitutionData",
        "tags" : [ "Institutions Data APIs" ]
      },
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/notices/folder/{folderId}" : {
      "delete" : {
        "description" : "Delete selected folder, if allowed",
        "operationId" : "deleteFolder",
        "parameters" : [ {
          "description" : "folderId to use for request retrieval",
          "in" : "path",
          "name" : "folderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "userId to use for request retrieval",
          "in" : "header",
          "name" : "X-User-Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Folder Deleted",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Folder not found",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service error",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service or notice storage unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "deleteFolder",
        "tags" : [ "Notice Generation Request APIs" ]
      },
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/notices/folder/{folderId}/file/{fileId}/url" : {
      "get" : {
        "description" : "Return file signedUrl",
        "operationId" : "getSignedUrlResource",
        "parameters" : [ {
          "description" : "folderId to use for request retrieval",
          "in" : "path",
          "name" : "folderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "userId to use for request retrieval",
          "in" : "header",
          "name" : "X-User-Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "fileId to use for request retrieval",
          "in" : "path",
          "name" : "fileId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSignedUrlResource"
                }
              }
            },
            "description" : "Return file signed url",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Folder or file not found",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service error",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service or notice storage unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "getSignedUrlResource",
        "tags" : [ "Notice Generation Request APIs" ]
      },
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/notices/folder/{folderId}/url" : {
      "get" : {
        "description" : "Return compressed folder file signedUrl",
        "operationId" : "getFolderSignedUrlResource",
        "parameters" : [ {
          "description" : "folderId to use for request retrieval",
          "in" : "path",
          "name" : "folderId",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "userId to use for request retrieval",
          "in" : "header",
          "name" : "X-User-Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetSignedUrlResource"
                }
              }
            },
            "description" : "Return folder signed url",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Folder or file not found",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service error",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service or notice storage unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "getFolderSignedUrlResource",
        "tags" : [ "Notice Generation Request APIs" ]
      },
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/notices/folder/{folder_id}/status" : {
      "get" : {
        "description" : "Return generation request status for a folder of notices",
        "operationId" : "getFolderStatus",
        "parameters" : [ {
          "description" : "folderId to use for request status retrieval",
          "in" : "path",
          "name" : "folder_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "description" : "userId to use for request status retrieval",
          "in" : "header",
          "name" : "X-User-Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/GetGenerationRequestStatusResource"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Folder not found or unavailable for the requirer",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "getFolderStatus",
        "tags" : [ "Notice Generation Request APIs" ]
      },
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/notices/generate" : {
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ],
      "post" : {
        "description" : "Request notice generation using the generator API and returns the pdf that has been producedif a folderId is provided and it is available for the userId, it will be saved for future recovery",
        "operationId" : "generateNotice",
        "parameters" : [ {
          "description" : "If the file exists you can specify the folder id. Pass it if you want to regenerate the file",
          "in" : "query",
          "name" : "folderId",
          "required" : false,
          "schema" : {
            "type" : "string",
            "description" : "If the file exists you can specify the folder id. Pass it if you want to regenerate the file"
          }
        }, {
          "description" : "User ID. Required if `folderId` is provided",
          "in" : "header",
          "name" : "X-User-Id",
          "required" : false,
          "schema" : {
            "type" : "string",
            "description" : "User ID. Required if `folderId` is provided"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoticeGenerationRequestItem"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/pdf" : {
                "schema" : {
                  "type" : "string",
                  "format" : "binary"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "generateNotice",
        "tags" : [ "Notice Generation Request APIs" ]
      }
    },
    "/notices/generate-massive" : {
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ],
      "post" : {
        "description" : "Insert massive notice generation request and returns folderId for reference an future recovery",
        "operationId" : "generateNoticeMassiveRequest",
        "parameters" : [ {
          "description" : "userId to use for request status retrieval",
          "in" : "header",
          "name" : "X-User-Id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NoticeGenerationMassiveRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/NoticeGenerationMassiveResource"
                }
              }
            },
            "description" : "OK",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "generateNoticeMassiveRequest",
        "tags" : [ "Notice Generation Request APIs" ]
      }
    },
    "/notices/templates" : {
      "get" : {
        "description" : "Return available templates for notice generation",
        "operationId" : "getTemplates",
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TemplateResource"
                  }
                }
              }
            },
            "description" : "Return template data",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Templates not found",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service error",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service or template table unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "getTemplates",
        "tags" : [ "Notice Templates APIs" ]
      },
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ]
    },
    "/notices/templates/{template_id}" : {
      "get" : {
        "description" : "Return templates",
        "operationId" : "getTemplate",
        "parameters" : [ {
          "description" : "templateId to use for retrieval",
          "in" : "path",
          "name" : "template_id",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : { }
            },
            "description" : "Return template data",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Bad Request",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Template not found",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "429" : {
            "description" : "Too many requests",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service error",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "503" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProblemJson"
                }
              }
            },
            "description" : "Service or template storage unavailable",
            "headers" : {
              "X-Request-Id" : {
                "description" : "This header identifies the call",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "ApiKey" : [ ]
        } ],
        "summary" : "getTemplate",
        "tags" : [ "Notice Templates APIs" ]
      },
      "parameters" : [ {
        "description" : "This header identifies the call, if not passed it is self-generated. This ID is returned in the response.",
        "in" : "header",
        "name" : "X-Request-Id",
        "schema" : {
          "type" : "string"
        }
      } ]
    }
  },
  "components" : {
    "schemas" : {
      "CreditorInstitution" : {
        "required" : [ "taxCode" ],
        "type" : "object",
        "properties" : {
          "taxCode" : {
            "type" : "string",
            "description" : "CI tax code"
          }
        },
        "description" : "Creditor Institution data"
      },
      "Debtor" : {
        "required" : [ "address", "buildingNumber", "city", "fullName", "postalCode", "province" ],
        "type" : "object",
        "properties" : {
          "address" : {
            "maxLength" : 140,
            "minLength" : 0,
            "type" : "string",
            "description" : "Debtor address"
          },
          "buildingNumber" : {
            "type" : "string",
            "description" : "Debtor building number"
          },
          "city" : {
            "type" : "string",
            "description" : "Debtor city"
          },
          "fullName" : {
            "maxLength" : 70,
            "minLength" : 0,
            "type" : "string",
            "description" : "Debtor full name"
          },
          "postalCode" : {
            "type" : "string",
            "description" : "Debtor postal code"
          },
          "province" : {
            "type" : "string",
            "description" : "Debtor province"
          },
          "taxCode" : {
            "maxLength" : 16,
            "minLength" : 0,
            "type" : "string",
            "description" : "Debtor taxCode"
          }
        },
        "description" : "Debtor data"
      },
      "GetGenerationRequestStatusResource" : {
        "required" : [ "noticesInError", "processedNotices", "status" ],
        "type" : "object",
        "properties" : {
          "noticesInError" : {
            "type" : "array",
            "description" : "items related to the request that produced an error",
            "items" : {
              "type" : "string",
              "description" : "items related to the request that produced an error"
            }
          },
          "processedNotices" : {
            "type" : "array",
            "description" : "Successfully processed items in request",
            "items" : {
              "type" : "string",
              "description" : "Successfully processed items in request"
            }
          },
          "status" : {
            "type" : "string",
            "description" : "Generation request status",
            "enum" : [ "INSERTED", "PROCESSING", "COMPLETING", "FAILED", "PROCESSED", "PROCESSED_WITH_FAILURES" ]
          }
        }
      },
      "GetSignedUrlResource" : {
        "type" : "object",
        "properties" : {
          "signedUrl" : {
            "type" : "string"
          }
        }
      },
      "InstallmentData" : {
        "required" : [ "amount", "code", "dueDate" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "description" : "Installment amount",
            "format" : "int64"
          },
          "code" : {
            "maxLength" : 18,
            "minLength" : 18,
            "type" : "string",
            "description" : "Installment code"
          },
          "dueDate" : {
            "type" : "string",
            "description" : "Installment dueDate"
          }
        },
        "description" : "Notice Installments"
      },
      "Notice" : {
        "required" : [ "code", "paymentAmount", "subject" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "maxLength" : 18,
            "minLength" : 18,
            "type" : "string",
            "description" : "Notice code"
          },
          "discountedAmount" : {
            "maximum" : 99999999999,
            "type" : "integer",
            "description" : "Notice discounted amount to pay (used for example in discounted amount for infractions)",
            "format" : "int64"
          },
          "dueDate" : {
            "type" : "string",
            "description" : "Notice due date"
          },
          "installments" : {
            "maxItems" : 2147483647,
            "minItems" : 2,
            "type" : "array",
            "description" : "Notice Installments",
            "items" : {
              "$ref" : "#/components/schemas/InstallmentData"
            }
          },
          "paymentAmount" : {
            "maximum" : 99999999999,
            "type" : "integer",
            "description" : "Notice total amount to pay",
            "format" : "int64"
          },
          "reducedAmount" : {
            "maximum" : 99999999999,
            "type" : "integer",
            "description" : "Notice reduced amount to pay (used for example in reduced amount for infractions)",
            "format" : "int64"
          },
          "subject" : {
            "maxLength" : 90,
            "minLength" : 0,
            "type" : "string",
            "description" : "Notice subject"
          }
        },
        "description" : "Notice data"
      },
      "NoticeGenerationMassiveRequest" : {
        "required" : [ "notices" ],
        "type" : "object",
        "properties" : {
          "notices" : {
            "maxItems" : 2147483647,
            "minItems" : 1,
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/NoticeGenerationRequestItem"
            }
          }
        },
        "description" : "massive notice generation request data"
      },
      "NoticeGenerationMassiveResource" : {
        "required" : [ "folder_id" ],
        "type" : "object",
        "properties" : {
          "folder_id" : {
            "type" : "string",
            "description" : "Generation request folderId"
          }
        }
      },
      "NoticeGenerationRequestItem" : {
        "required" : [ "data", "templateId" ],
        "type" : "object",
        "properties" : {
          "data" : {
            "$ref" : "#/components/schemas/NoticeRequestData"
          },
          "templateId" : {
            "type" : "string",
            "description" : "The template identifier. Use the appropriate GET service to retrieve the list of the ids"
          }
        },
        "description" : "templateId to use for retrieval"
      },
      "NoticeRequestData" : {
        "required" : [ "creditorInstitution", "debtor", "notice" ],
        "type" : "object",
        "properties" : {
          "creditorInstitution" : {
            "$ref" : "#/components/schemas/CreditorInstitution"
          },
          "debtor" : {
            "$ref" : "#/components/schemas/Debtor"
          },
          "notice" : {
            "$ref" : "#/components/schemas/Notice"
          }
        },
        "description" : "The data used to fill the template"
      },
      "ProblemJson" : {
        "type" : "object",
        "properties" : {
          "detail" : {
            "type" : "string",
            "description" : "A human readable explanation specific to this occurrence of the problem.",
            "example" : "There was an error processing the request"
          },
          "status" : {
            "maximum" : 600,
            "minimum" : 100,
            "type" : "integer",
            "description" : "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "format" : "int32",
            "example" : 200
          },
          "title" : {
            "type" : "string",
            "description" : "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized); example: Service Unavailable"
          }
        }
      },
      "TemplateResource" : {
        "required" : [ "description", "templateExampleUrl", "templateId" ],
        "type" : "object",
        "properties" : {
          "description" : {
            "type" : "string",
            "description" : "Template description"
          },
          "templateExampleUrl" : {
            "type" : "string",
            "description" : "Template example url"
          },
          "templateId" : {
            "type" : "string",
            "description" : "templateId, to use when requiring generation of a notice with the selected template"
          }
        }
      }
    },
    "securitySchemes" : {
      "ApiKey" : {
        "description" : "The Azure Subscription Key to access this API.",
        "in" : "header",
        "name" : "Ocp-Apim-Subscription-Key",
        "type" : "apiKey"
      }
    }
  }
}